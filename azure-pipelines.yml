# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - master

jobs:
- job: Ubuntu_GCC
  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    matrix:
      Release:
        BUILD_TYPE: 'RELEASE'
      Debug:
        BUILD_TYPE: 'DEBUG'
    maxParallel: 2

  steps:
  - script: printenv

  - script: |
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      sudo apt-get update
      sudo apt-get install gcc-6 g++-6
      sudo apt-get install cmake libfftw3-dev libfftw3-single3 libmpich-dev
    displayName: 'Install dependencies'

  - script: cmake --version

  - script: g++-6 --version

  - script: apt-get search cuda

  - script: apt-cache search cuda

  - script: echo ${BUILD_TYPE}

  - script: |
      mkdir -p build
      cd build
      CXX=g++-6 cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=ON
      make VERBOSE=1
    displayName: 'Build'

  - script: |
      ./build/tests/run_local_tests
    displayName: 'Run local tests'

  - script: |
      mpirun -n 2 ./build/tests/run_mpi_tests
    displayName: 'Run MPI tests'


- job: macOS_Clang
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - script: |
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    displayName: 'Install Homebrew'

  - script: |
      # brew install llvm
      # brew install libomp
      # brew install cmake # cmake alreay installed
      brew install fftw
      brew install open-mpi
    displayName: 'Install dependencies'

  # - script: $(brew --prefix llvm)/bin/clang++ --version

  - script: |
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=OFF
      make VERBOSE=1
    displayName: 'Build'

  - script: |
      ./build/tests/run_local_tests
    displayName: 'Run local tests'

  - script: |
      mpirun -n 2 ./build/tests/run_mpi_tests
    displayName: 'Run MPI tests'
