parameters:
# job config
  job_name: 'Ubuntu_GCC'
  run_mpi_tests: false
  run_local_tests: false
#cmake parameters
  cm_mpi: 'ON'
  cm_omp: 'ON'
  cm_single_precision: 'OFF'
  cm_gpu_backend: 'OFF'

jobs:
- job: ${{ parameters.job_name }}
  pool:
    vmImage: 'ubuntu-latest'

  container: adhocman/master:ubuntu_18_04_cuda_9

  strategy:
    matrix:
      Release:
        BUILD_TYPE: 'RELEASE'
      Debug:
        BUILD_TYPE: 'DEBUG'
    maxParallel: 2

  variables:
    SPFFT_MPI: ${{ parameters.cm_mpi }}
    SPFFT_OMP: ${{ parameters.cm_omp }}
    SPFFT_SINGLE_PRECISION: ${{ parameters.cm_single_precision }}
    SPFFT_GPU_BACKEND: ${{ parameters.cm_gpu_backend }}

  steps:
  - script: |
      mkdir -p build
      cd build
      CUDACXX=/usr/local/cuda-9.0/bin/nvcc /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=OFF -DSPFFT_MPI=${SPFFT_MPI} -DSPFFT_OMP=${SPFFT_OMP} -DSPFFT_SINGLE_PRECISION=${SPFFT_SINGLE_PRECISION} -DSPFFT_GPU_BACKEND=${SPFFT_GPU_BACKEND}
      make VERBOSE=1
    displayName: 'Build library'

  - script: |
      cd build
      mkdir -p install_dir
      INSTALL_DIR=$(pwd)/install_dir
      /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
      make VERBOSE=1 install
      test -f ${INSTALL_DIR}/lib/libspfft.so
      test -f ${INSTALL_DIR}/include/spfft/spfft.hpp
      test -f ${INSTALL_DIR}/include/spfft/spfft.h
    displayName: 'Install library'

  - script: |
      mkdir -p build
      cd build
      /opt/cmake-3.11.0/bin/cmake .. -DSPFFT_BUILD_TESTS=ON
      make VERBOSE=1
    displayName: 'Build tests'

  - script: |
      export OMP_NUM_THREADS=2
      ./build/tests/run_local_tests
    displayName: 'Run local tests'
    condition: and(succeeded(), eq('${{ parameters.run_local_tests }}', 'true'))

  - script: |
      export OMP_NUM_THREADS=2
      mpirun -n 2 ./build/tests/run_mpi_tests
    displayName: 'Run MPI tests'
    condition: and(succeeded(), eq('${{ parameters.run_mpi_tests }}', 'true'))
