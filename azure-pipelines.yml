#######################
#       Linux
#######################
jobs:
- job: Ubuntu_GCC
  pool:
    vmImage: 'ubuntu-latest'

  container: adhocman/master:ubuntu_18_04_cuda_9

  strategy:
    matrix:
      Release:
        BUILD_TYPE: 'RELEASE'
      Debug:
        BUILD_TYPE: 'DEBUG'
    maxParallel: 2

  steps:
  - script: |
      mkdir -p build_cuda
      cd build_cuda
      CUDACXX=/usr/local/cuda-9.0/bin/nvcc /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=OFF -DSPFFT_MPI=ON -DSPFFT_OMP=ON -DSPFFT_SINGLE_PRECISION=ON -DSPFFT_GPU_BACKEND=CUDA
      make VERBOSE=1
    displayName: 'Build CUDA with single precision (library only)'

  - script: |
      mkdir -p build_cuda_tests
      cd build_cuda_tests
      CUDACXX=/usr/local/cuda-9.0/bin/nvcc /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=ON -DSPFFT_GPU_BACKEND=CUDA
      make VERBOSE=1
    displayName: 'Build CUDA Tests'

  - script: |
      mkdir -p build_mpi
      cd build_mpi
      CUDACXX=/usr/local/cuda-9.0/bin/nvcc /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=ON
      make VERBOSE=1
    displayName: 'Build MPI Tests'

  - script: |
      mkdir -p build_no_parallel
      cd build_no_parallel
      CUDACXX=/usr/local/cuda-9.0/bin/nvcc /opt/cmake-3.11.0/bin/cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=OFF -DSPFFT_OMP=OFF
      make VERBOSE=1
    displayName: 'Build Local Tests'

  - script: |
      export OMP_NUM_THREADS=2
      ./build_mpi/tests/run_local_tests
    displayName: 'Run local tests with OpenMP'

  - script: |
      ./build_no_parallel/tests/run_local_tests
    displayName: 'Run local tests without OpenMP'

  - script: |
      export OMP_NUM_THREADS=1
      mpirun -n 2 ./build_mpi/tests/run_mpi_tests
    displayName: 'Run MPI tests'


#######################
#       macOS
#######################
- job: macOS_Clang
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - script: |
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    displayName: 'Install Homebrew'

  - script: |
      brew install fftw
      brew install open-mpi
    displayName: 'Install dependencies'

  # Apple Clang does not support OpenMP
  - script: |
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=OFF
      make VERBOSE=1
    displayName: 'Build'

  - script: |
      ./build/tests/run_local_tests
    displayName: 'Run local tests'

  - script: |
      mpirun -n 2 ./build/tests/run_mpi_tests
    displayName: 'Run MPI tests'
