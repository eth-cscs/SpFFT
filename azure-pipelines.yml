#######################
#       Linux
#######################
jobs:
# CUDA build
- template: CI/azure_templates/ubuntu_build_test.yml
  parameters:
    job_name: "Ubuntu_GCC_CUDA"
    run_mpi_tests: false
    run_local_tests: false
    cm_mpi: 'ON'
    cm_omp: 'ON'
    cm_single_precision: 'ON'
    cm_gpu_backend: 'CUDA'

# buld and test without MPI and OpenMP
- template: CI/azure_templates/ubuntu_build_test.yml
  parameters:
    job_name: "Ubuntu_GCC_no_parallel"
    run_mpi_tests: false
    run_local_tests: true
    cm_mpi: 'OFF'
    cm_omp: 'OFF'
    cm_single_precision: 'OFF'
    cm_gpu_backend: 'OFF'

# buld and test with full parallelization
- template: CI/azure_templates/ubuntu_build_test.yml
  parameters:
    job_name: "Ubuntu_GCC_parallel"
    run_mpi_tests: true
    run_local_tests: true
    cm_mpi: 'ON'
    cm_omp: 'ON'
    cm_single_precision: 'OFF'
    cm_gpu_backend: 'OFF'

#######################
#       macOS
#######################
- job: macOS_Clang
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - script: |
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    displayName: 'Install Homebrew'

  - script: |
      brew install fftw
      brew install open-mpi
    displayName: 'Install dependencies'

  # Apple Clang does not support OpenMP
  - script: |
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSPFFT_BUILD_TESTS=ON -DSPFFT_MPI=ON -DSPFFT_OMP=OFF
      make VERBOSE=1
    displayName: 'Build'

  - script: |
      ./build/tests/run_local_tests
    displayName: 'Run local tests'

  - script: |
      mpirun -n 2 ./build/tests/run_mpi_tests
    displayName: 'Run MPI tests'
